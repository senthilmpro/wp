{"version":3,"sources":["logo.svg","services/archive-util.js","services/metadata-util.js","config.js","services/wordpress-util.js","services/parser-util.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["utils","parseContent","content","DOMParser","parseFromString","querySelector","innerText","parseEncodedContent","text","length","substring","convertToObject","str","atob","JSON","parse","fetchArchiveItem","url","a","axios","get","then","res","data","console","log","ignoredFormats","MetadataUtil","fileLinks","obj","dark","server","dir","files","newFiles","filter","x","indexOf","format","source","map","name","downloadUrl","identifier","metadata","identifer","WpConfig","WordpressUtil","fetchPostsUrl","site","page","number","fetchWpContent","parser","fetchDataAndTransform","pageIndex","objArray","posts","forEach","val","ind","title","htmlText","decodedText","finalObj","push","Home","useState","setData","setPageIndex","links","setLinks","currentUrl","setCurrentUrl","setArchiveLinks","linksArray","fetchArchiveUrl","reqUrl","replace","linksArr","useEffect","className","class","href","target","onClick","c","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bc39103.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport axios from 'axios';\r\n\r\nconst utils = {\r\n    parseContent: (content) => {\r\n        const parser = new DOMParser();\r\n        const htmlObj = parser.parseFromString(content, 'text/html');\r\n        const text= htmlObj.querySelector('p').innerText;\r\n        return text;\r\n    },\r\n    parseEncodedContent: (text) => {\r\n        const splitIndex = 4;\r\n        if(text && text.length > 4){\r\n            return text.substring(0,splitIndex) + text.substring(12)\r\n        }\r\n        return null;\r\n    },\r\n    convertToObject: (text) => {\r\n        let str = atob(text);\r\n        if(str && typeof str == \"string\"){\r\n            return JSON.parse(str);\r\n        }\r\n    },\r\n    fetchArchiveItem: async(url) => {\r\n        const data = await axios.get(url).then(res => res.data);\r\n        console.log(data);\r\n        return data;\r\n    }\r\n}\r\n\r\nlet main = async () => {\r\n    \r\n}\r\n\r\nexport default utils;","// archive metadata util.\r\n\r\nconst ignoredFormats = [\r\n    \"Metadata\",\r\n    \"Archive BitTorrent\",\r\n    \"BitTorrent\",\r\n    \"Thumbnail\",\r\n    \"BitTorrentContents\",\r\n    \"Text\"\r\n];\r\n\r\nconst MetadataUtil = {\r\n    fileLinks: (obj) => {\r\n        if(!obj) return [];\r\n        if(obj.dark) return [];\r\n        const {server, dir, files} = obj;\r\n        let newFiles = [];\r\n        if(files && files.length > 0){\r\n            newFiles = files.filter(x => ignoredFormats.indexOf(x.format) == -1).filter(x => (x.source == \"original\"));\r\n            newFiles = newFiles.map(x => `https://${server}${dir}/${x.name}`)\r\n        }\r\n        console.log(\"FILES: \", newFiles);\r\n        return newFiles;\r\n    },\r\n    downloadUrl: (obj) => {\r\n        let identifier = obj?.metadata?.identifer;\r\n        return `https://archive.org/download/${identifier}`;\r\n    }\r\n}\r\n\r\nexport default MetadataUtil;","export const WpConfig = {\r\n    site: `archive1x.wordpress.com`,\r\n    page: 1,\r\n    number: 10\r\n}","import axios from \"axios\";\r\nimport { WpConfig } from \"../config\";\r\n\r\nconst WordpressUtil = {\r\n    fetchPostsUrl: (site, page, number) => {\r\n        return `https://public-api.wordpress.com/rest/v1.1/sites/${site}/posts?number=${number}&page=${page}&fields=title,content`;\r\n    },\r\n    fetchWpContent: async (site = WpConfig.site, page=WpConfig.site, number = WpConfig.number) => {\r\n        let url = WordpressUtil.fetchPostsUrl(site, page, number);\r\n        try {\r\n            let data = await axios.get(url).then(res => res.data);\r\n            return data;\r\n        } catch(err) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default WordpressUtil;","import { WpConfig } from '../config';\r\nimport utils from './archive-util';\r\nimport WordpressUtil from './wordpress-util';\r\n\r\nconst parser = {\r\n    fetchDataAndTransform: async (pageIndex) => {\r\n        let data = await WordpressUtil.fetchWpContent(WpConfig.site, pageIndex, WpConfig.number);\r\n        let objArray = [];\r\n        let posts = data.posts;\r\n        posts.forEach((val, ind) => {\r\n            let {content, title} = val;\r\n            let htmlText = utils.parseContent(content);\r\n            let decodedText = utils.parseEncodedContent(htmlText);\r\n            let obj = utils.convertToObject(decodedText);\r\n            let finalObj = {\r\n                ...obj,\r\n                title: title\r\n            }\r\n            objArray.push(finalObj);\r\n        })\r\n        return objArray;\r\n    }\r\n}\r\n\r\nexport default parser;","import React, { useEffect, useState } from 'react';\r\nimport utils from '../../services/archive-util';\r\nimport MetadataUtil from '../../services/metadata-util';\r\nimport parser from '../../services/parser-util';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n    const [pageIndex, setPageIndex] = useState(1);\r\n    const [links, setLinks] = useState(null);\r\n    const [currentUrl, setCurrentUrl] = useState(null);\r\n    const siteTitle = \"Archive WP\";\r\n\r\n    const setArchiveLinks = async (pageIndex) => {\r\n        const linksArray = await parser.fetchDataAndTransform(pageIndex);\r\n        console.log(\"LINKS ARRAY: \", linksArray)\r\n        setData(linksArray);\r\n    }\r\n\r\n    const fetchArchiveUrl = async (url) => {\r\n        if (url == currentUrl) {\r\n            setCurrentUrl(null);\r\n        } else {\r\n            setCurrentUrl(url);\r\n            let reqUrl = url.replace('/details/', '/metadata/');\r\n            reqUrl = reqUrl.replace('http://', 'https://');\r\n            const data = await utils.fetchArchiveItem(reqUrl);\r\n            const linksArr = MetadataUtil.fileLinks(data);\r\n            setLinks(linksArr);\r\n        }\r\n    }\r\n\r\n    const nextItems = () => {\r\n        setPageIndex(c => c + 1);\r\n    }\r\n\r\n    const prevItems = () => {\r\n        if (pageIndex > 1) {\r\n            setPageIndex(c => c - 1);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setArchiveLinks(pageIndex);\r\n    }, [pageIndex])\r\n\r\n    return (\r\n        <div className=\"container Home\">\r\n            <div>\r\n                <h2>{siteTitle} - page {pageIndex}</h2>\r\n            </div>\r\n            <div className=\"LinkItemsContainer\">\r\n                {\r\n                    data.map(val => {\r\n                        return (\r\n                            <div>\r\n                                <div className=\"LinkItem\">\r\n                                    <span class=\"dot\"></span> <a href={val.url} target=\"_blank\"> {val.title}</a>\r\n                                    <button className=\"btn btn-primary btn-sm links-btn\" onClick={() => fetchArchiveUrl(val.url)} >Links</button>\r\n                                </div>\r\n                                {\r\n                                    val.url == currentUrl &&\r\n                                    <div className=\"fileLinks\">\r\n                                        <ul>\r\n                                            {links && links.map(x => <li><a href={x}>{x}</a></li>)}\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"btn-container\">\r\n                <button className=\"btn\" onClick={() => prevItems()}>Previous</button>\r\n                <button className=\"btn\" onClick={() => nextItems()}>Next</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './components/Home/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}