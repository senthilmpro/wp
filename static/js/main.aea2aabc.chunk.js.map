{"version":3,"sources":["logo.svg","services/archive-util.js","services/metadata-util.js","config.js","services/wordpress-util.js","services/parser-util.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["utils","parseContent","content","DOMParser","parseFromString","querySelector","innerText","parseEncodedContent","text","length","substring","convertToObject","str","atob","JSON","parse","fetchArchiveItem","url","a","axios","get","then","res","data","console","log","ignoredFormats","MetadataUtil","fileLinks","obj","dark","server","dir","files","newFiles","filter","x","indexOf","format","source","map","name","downloadUrl","identifier","metadata","identifer","WpConfig","WordpressUtil","fetchPostsUrl","site","page","number","fetchWpContent","parser","fetchDataAndTransform","pageIndex","objArray","posts","forEach","val","ind","title","htmlText","decodedText","finalObj","push","Home","useState","setData","setPageIndex","links","setLinks","currentUrl","setCurrentUrl","setArchiveLinks","linksArray","fetchArchiveUrl","reqUrl","replace","linksArr","useEffect","className","class","href","target","onClick","c","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aea2aabc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport axios from 'axios';\n\nconst utils = {\n    parseContent: (content) => {\n        const parser = new DOMParser();\n        const htmlObj = parser.parseFromString(content, 'text/html');\n        const text= htmlObj.querySelector('p').innerText;\n        return text;\n    },\n    parseEncodedContent: (text) => {\n        const splitIndex = 4;\n        if(text && text.length > 4){\n            return text.substring(0,splitIndex) + text.substring(12)\n        }\n        return null;\n    },\n    convertToObject: (text) => {\n        let str = atob(text);\n        if(str && typeof str == \"string\"){\n            return JSON.parse(str);\n        }\n    },\n    fetchArchiveItem: async(url) => {\n        const data = await axios.get(url).then(res => res.data);\n        console.log(data);\n        return data;\n    }\n}\n\nlet main = async () => {\n    \n}\n\nexport default utils;","// archive metadata util.\n\nconst ignoredFormats = [\n    \"Metadata\",\n    \"Archive BitTorrent\",\n    \"BitTorrent\",\n    \"Thumbnail\",\n    \"BitTorrentContents\",\n    \"Text\"\n];\n\nconst MetadataUtil = {\n    fileLinks: (obj) => {\n        if(!obj) return [];\n        if(obj.dark) return [];\n        const {server, dir, files} = obj;\n        let newFiles = [];\n        if(files && files.length > 0){\n            newFiles = files.filter(x => ignoredFormats.indexOf(x.format) == -1).filter(x => (x.source == \"original\"));\n            newFiles = newFiles.map(x => `https://${server}${dir}/${x.name}`)\n        }\n        console.log(\"FILES: \", newFiles);\n        return newFiles;\n    },\n    downloadUrl: (obj) => {\n        let identifier = obj?.metadata?.identifer;\n        return `https://archive.org/download/${identifier}`;\n    }\n}\n\nexport default MetadataUtil;","export const WpConfig = {\n    site: `archive1x.wordpress.com`,\n    page: 1,\n    number: 10\n}","import axios from \"axios\";\nimport { WpConfig } from \"../config\";\n\nconst WordpressUtil = {\n    fetchPostsUrl: (site, page, number) => {\n        return `https://public-api.wordpress.com/rest/v1.1/sites/${site}/posts?number=${number}&page=${page}&fields=title,content`;\n    },\n    fetchWpContent: async (site = WpConfig.site, page=WpConfig.site, number = WpConfig.number) => {\n        let url = WordpressUtil.fetchPostsUrl(site, page, number);\n        try {\n            let data = await axios.get(url).then(res => res.data);\n            return data;\n        } catch(err) {\n            return null;\n        }\n    }\n}\n\nexport default WordpressUtil;","import { WpConfig } from '../config';\nimport utils from './archive-util';\nimport WordpressUtil from './wordpress-util';\n\nconst parser = {\n    fetchDataAndTransform: async (pageIndex) => {\n        let data = await WordpressUtil.fetchWpContent(WpConfig.site, pageIndex, WpConfig.number);\n        let objArray = [];\n        let posts = data.posts;\n        posts.forEach((val, ind) => {\n            let {content, title} = val;\n            let htmlText = utils.parseContent(content);\n            let decodedText = utils.parseEncodedContent(htmlText);\n            let obj = utils.convertToObject(decodedText);\n            let finalObj = {\n                ...obj,\n                title: title\n            }\n            objArray.push(finalObj);\n        })\n        return objArray;\n    }\n}\n\nexport default parser;","import React, { useEffect, useState } from 'react';\nimport utils from '../../services/archive-util';\nimport MetadataUtil from '../../services/metadata-util';\nimport parser from '../../services/parser-util';\nimport './Home.css';\n\nconst Home = () => {\n    const [data, setData] = useState([]);\n    const [pageIndex, setPageIndex] = useState(1);\n    const [links, setLinks] = useState(null);\n    const [currentUrl, setCurrentUrl] = useState(null);\n    const siteTitle = \"Archive WP\";\n\n    const setArchiveLinks = async (pageIndex) => {\n        const linksArray = await parser.fetchDataAndTransform(pageIndex);\n        console.log(\"LINKS ARRAY: \", linksArray)\n        setData(linksArray);\n    }\n\n    const fetchArchiveUrl = async (url) => {\n        if (url == currentUrl) {\n            setCurrentUrl(null);\n        } else {\n            setCurrentUrl(url);\n            let reqUrl = url.replace('/details/', '/metadata/');\n            reqUrl = reqUrl.replace('http://', 'https://');\n            const data = await utils.fetchArchiveItem(reqUrl);\n            const linksArr = MetadataUtil.fileLinks(data);\n            setLinks(linksArr);\n        }\n    }\n\n    const nextItems = () => {\n        setPageIndex(c => c + 1);\n    }\n\n    const prevItems = () => {\n        if (pageIndex > 1) {\n            setPageIndex(c => c - 1);\n        }\n    }\n\n    useEffect(() => {\n        setArchiveLinks(pageIndex);\n    }, [pageIndex])\n\n    return (\n        <div className=\"container Home\">\n            <div>\n                <h2>{siteTitle} - page {pageIndex}</h2>\n            </div>\n            <div className=\"LinkItemsContainer\">\n                {\n                    data.map(val => {\n                        return (\n                            <>\n                                <div className=\"LinkItem\">\n                                    <span class=\"dot\"></span> <a href={val.url} target=\"_blank\"> {val.title}</a>\n                                    <button className=\"btn btn-default btn-sm links-btn\" onClick={() => fetchArchiveUrl(val.url)} >Links</button>\n                                </div>\n                                {\n                                    val.url == currentUrl &&\n                                    <div className=\"fileLinks\">\n                                        <ul>\n                                            {links && links.map(x => <li className=\"file-link\"><a href={x}>{x}</a></li>)}\n                                        </ul>\n                                    </div>\n                                }\n\n                            </>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"btn-container\">\n                <button className=\"btn btn-info\" onClick={() => prevItems()}>Previous</button>\n                <button className=\"btn btn-info\" onClick={() => nextItems()}>Next</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}